{"version":3,"sources":["components/SimpleInput.js","App.js","index.js"],"names":["SimpleInput","props","useState","enteredName","setEnteredName","enteredNameTouched","setEnteredNameTouched","enteredEmail","setEnteredEmail","enteredEmailIsTouched","setEnteredEmailIsTouched","enteredNameIsValid","trim","nameInputIsInvalid","enteredEmailIsValid","includes","enteredEmailIsInvalid","formIsValid","nameInputClasses","emailInputClasses","onSubmit","event","preventDefault","className","htmlFor","type","id","onChange","target","value","onBlur","disabled","App","ReactDOM","createRoot","document","getElementById","render"],"mappings":"gNAgGeA,EA9FK,SAACC,GACnB,MAAsCC,mBAAS,IAA/C,mBAAOC,EAAP,KAAoBC,EAApB,KACA,EAAoDF,oBAAS,GAA7D,mBAAOG,EAAP,KAA2BC,EAA3B,KAEA,EAAwCJ,mBAAS,IAAjD,mBAAOK,EAAP,KAAqBC,EAArB,KACA,EAA0DN,oBAAS,GAAnE,mBAAOO,EAAP,KAA8BC,EAA9B,KAEMC,EAA4C,KAAvBR,EAAYS,OACjCC,GAAsBF,GAAsBN,EAE5CS,EAAsBP,EAAaQ,SAAS,KAC5CC,GAAyBF,GAAuBL,EAElDQ,GAAc,EAEdN,GAAsBG,IACxBG,GAAc,GAGhB,IAgCMC,EAAmBL,EACrB,uBACA,eAEEM,EAAoBH,EACtB,uBACA,eAEJ,OACE,uBAAMI,SAzBsB,SAACC,GAC7BA,EAAMC,iBACNhB,GAAsB,GACtBI,GAAyB,IAEpBC,GAAuBG,KAK5BV,EAAe,IACfI,EAAgB,IAChBF,GAAsB,GACtBI,GAAyB,KAYzB,UACE,sBAAKa,UAAWL,EAAhB,UACE,uBAAOM,QAAQ,OAAf,uBACA,uBACEC,KAAK,OACLC,GAAG,OACHC,SA/CiB,SAACN,GACxBjB,EAAeiB,EAAMO,OAAOC,QA+CtBC,OA5CqB,SAACT,GAC5Bf,GAAsB,IA4ChBuB,MAAO1B,IAERU,GACC,mBAAGU,UAAU,aAAb,wCAGJ,sBAAKA,UAAWJ,EAAhB,UACE,uBAAOK,QAAQ,QAAf,yBACA,uBACEC,KAAK,QACLC,GAAG,QACHC,SApDkB,SAACN,GACzBb,EAAgBa,EAAMO,OAAOC,QAoDvBC,OAjDsB,SAACT,GAC7BX,GAAyB,IAiDnBmB,MAAOtB,IAERS,GACC,mBAAGO,UAAU,aAAb,kCAGJ,qBAAKA,UAAU,eAAf,SACE,wBAAQQ,UAAWd,EAAnB,0BChFOe,MARf,WACE,OACE,qBAAKT,UAAU,MAAf,SACE,cAAC,EAAD,OCAOU,IAASC,WAAWC,SAASC,eAAe,SACpDC,OAAO,cAAC,EAAD,O","file":"static/js/main.9598146d.chunk.js","sourcesContent":["import { useState } from \"react\";\n\nconst SimpleInput = (props) => {\n  const [enteredName, setEnteredName] = useState(\"\");\n  const [enteredNameTouched, setEnteredNameTouched] = useState(false);\n\n  const [enteredEmail, setEnteredEmail] = useState(\"\");\n  const [enteredEmailIsTouched, setEnteredEmailIsTouched] = useState(false);\n\n  const enteredNameIsValid = enteredName.trim() !== \"\";\n  const nameInputIsInvalid = !enteredNameIsValid && enteredNameTouched;\n\n  const enteredEmailIsValid = enteredEmail.includes(\"@\");\n  const enteredEmailIsInvalid = !enteredEmailIsValid && enteredEmailIsTouched;\n\n  let formIsValid = false;\n\n  if (enteredNameIsValid && enteredEmailIsValid) {\n    formIsValid = true;\n  }\n\n  const nameInputHandler = (event) => {\n    setEnteredName(event.target.value);\n  };\n\n  const nameInputBlurHandler = (event) => {\n    setEnteredNameTouched(true);\n  };\n\n  const emailInputHandler = (event) => {\n    setEnteredEmail(event.target.value);\n  };\n\n  const emailInputBlurHandler = (event) => {\n    setEnteredEmailIsTouched(true);\n  };\n\n  const formSubmissionHandler = (event) => {\n    event.preventDefault();\n    setEnteredNameTouched(true);\n    setEnteredEmailIsTouched(true);\n\n    if (!enteredNameIsValid && !enteredEmailIsValid) {\n      return;\n    }\n\n    //nameInputRef.current.value = \"\"; => NOT IDEAL, DON'T MANIPULATE THE DOM\n    setEnteredName(\"\");\n    setEnteredEmail(\"\");\n    setEnteredNameTouched(false);\n    setEnteredEmailIsTouched(false);\n  };\n\n  const nameInputClasses = nameInputIsInvalid\n    ? \"form-control invalid\"\n    : \"form-control\";\n\n  const emailInputClasses = enteredEmailIsInvalid\n    ? \"form-control invalid\"\n    : \"form-control\";\n\n  return (\n    <form onSubmit={formSubmissionHandler}>\n      <div className={nameInputClasses}>\n        <label htmlFor=\"name\">Your Name</label>\n        <input\n          type=\"text\"\n          id=\"name\"\n          onChange={nameInputHandler}\n          onBlur={nameInputBlurHandler}\n          value={enteredName}\n        />\n        {nameInputIsInvalid && (\n          <p className=\"error-text\">Name must not be empty.</p>\n        )}\n      </div>\n      <div className={emailInputClasses}>\n        <label htmlFor=\"email\">Your E-Mail</label>\n        <input\n          type=\"email\"\n          id=\"email\"\n          onChange={emailInputHandler}\n          onBlur={emailInputBlurHandler}\n          value={enteredEmail}\n        />\n        {enteredEmailIsInvalid && (\n          <p className=\"error-text\">Enter your email.</p>\n        )}\n      </div>\n      <div className=\"form-actions\">\n        <button disabled={!formIsValid}>Submit</button>\n      </div>\n    </form>\n  );\n};\n\nexport default SimpleInput;\n","import SimpleInput from './components/SimpleInput';\n\nfunction App() {\n  return (\n    <div className=\"app\">\n      <SimpleInput />\n    </div>\n  );\n}\n\nexport default App;\n","import ReactDOM from 'react-dom/client';\n\nimport './index.css';\nimport App from './App';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(<App />);\n"],"sourceRoot":""}